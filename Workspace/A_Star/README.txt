// Project: A_Star
// Status: Complete (August 2017)

A (very) simple implementation of the A* algorithm that uses a regular square grid (where each node/cell has a maximum of 
four neighbors). The program (or .jar) accepts a single argument: the name of a  text file which stores map data to be loaded 
into the program. The graph file must be in the same directory as the jar file. Press 
'A' to advance to the next step in the algorithm; press 'F' to see the full path
generated by A*; press 'Q' to quit. Pink cells are cells that are currently being
processed; dark purpule cells are neighbors that are currently being considered. 


// Graph format & making a graph file:
Cell colours:
- blocked/obstacle = black
- open = grey
- grass = green
- swamp = blue

Cells positions are the SAME as they are stored in array memory; example:

      column 0  column1 column2
row 0: CELL_A | CELL_B | CELL_C
row 1: CELL_D | CELL_E | CELL_F
row 2: CELL_G | CELL_H | CELL_I

So, CELL_F's position in both the algorithm and in array is (1, 2)

The first line of a graph file is the graph dimensions, starting position, and 
ending position; please note that although A* still works with any positive graph 
dimensions, the program hasn't been "fine-tweaked" graphically to support dimensions
besides 16x16. Each folling line in the file is a row in the graph. Each cell 
in the file must 'o', 'b', 'g', or 's': standing for open, blocked, grass, and 
swamp (respectively); the start and ending cells cannot be blocked. A (very) 
simple java file for randomly generating graph files has been provided. If
would like to create a file by hand, however, please refer to the example below:

4 4 0 0 3 3
g b s o
o o b b
s s o g
g b g o